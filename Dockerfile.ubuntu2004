FROM ubuntu:20.04

# fpm
RUN apt-get update \
 && apt install -y build-essential libncurses5-dev procps ruby-dev \
 && apt-get clean
RUN gem install fpm --no-rdoc --no-ri

ENV CXXFLAGS="-std=c++98"

# 1.mysql 4.0.30 ---------------------------------------------------------
WORKDIR /usr/local/src
COPY files/mysql-4.0.30.tar.gz .
RUN tar xzf mysql-4.0.30.tar.gz
WORKDIR /usr/local/src/mysql-4.0.30
# eucjpとsjisを有効化
RUN ./configure --prefix=/opt/mysql --with-charset=ujis --with-extra-charsets=sjis
RUN make -s 1>/dev/null
RUN make install
COPY files.ubuntu2004/ld.so.conf.d/opt-mysql40.conf /etc/ld.so.conf.d/opt-mysql40.conf
COPY files.ubuntu2004/my.cnf /etc/my.cnf.sample
RUN fpm -s dir \
  -v 4.0.30 \
  -t deb \
  -n opt-mysql \
  -p opt-mysql-4.0.30_focal-gcc9_amd64.deb \
  -C / \
  --prefix / \
  -a x86_64 \
  /opt/mysql/ /etc/ld.so.conf.d/opt-mysql40.conf /etc/my.cnf.sample

#---------------
# openssl-1.0.2t
#---------------
WORKDIR /usr/local/src
COPY files/openssl/openssl-1.0.2t.tar.gz openssl-1.0.2t.tar.gz
RUN tar xzf openssl-1.0.2t.tar.gz
WORKDIR /usr/local/src/openssl-1.0.2t
RUN ./config --prefix=/opt/openssl-1.0.2t shared
RUN make -s
RUN make install
RUN fpm -s dir \
  -v 1.0.2t \
  -t deb \
  -n opt-openssl \
  -p opt-openssl-1.0.2t_focal-gcc9_amd64.deb \
  -C /opt/openssl-1.0.2t \
  --prefix /opt/openssl-1.0.2t \
  -a x86_64 \
  .


# 2.php 5.2.17 -----------------------------------------------------------
WORKDIR /usr/local/src
RUN apt install -y libxml2-dev apache2 apache2-dev libssl-dev \
 && apt-get clean
COPY files/php-5.2.17.tar.bz2 .
RUN tar jxf php-5.2.17.tar.bz2
#
WORKDIR /usr/local/src/php-5.2.17
RUN apt install -y zlib1g-dev libjpeg-dev libpng-dev libfreetype6-dev libmcrypt-dev libmhash-dev \
 && apt-get clean
# configureを通すため。
RUN ln -s /opt/mysql/lib/mysql/libmysqlclient.so /opt/mysql/lib/mysql/libmysqlclient_r.so \
 && ln -s /opt/mysql/lib/mysql/libmysqlclient.a /opt/mysql/lib/mysql/libmysqlclient_r.a \
 && ln -s /opt/mysql/lib/mysql/ /opt/mysql/lib/x86_64-linux-gnu \
 && (cd /opt/openssl-1.0.2t && cp -a lib x86_64-linux-gnu && mv x86_64-linux-gnu lib)
# CentOS7用と同じパッチ
COPY files/php-patch/gmp.patch ..
COPY files/php-patch/php-5.2.17.patch ..
COPY files/php-patch/php_functions.patch ..
RUN patch -p0 -b < ../php-5.2.17.patch \
 && patch -p0 -b < ../gmp.patch \
 && patch -p0 -b < ../php_functions.patch
#
RUN ./configure \
  --prefix=/usr/local/php \
  --with-apxs2=/usr/bin/apxs \
  --with-pear=/usr/local/pear \
  --disable-cgi \
  --enable-zend-multibyte \
  --enable-mbstring \
  \
  --with-mysql=shared,/opt/mysql \
  --with-pdo-mysql=shared,/opt/mysql \
  \
  --with-openssl=/opt/openssl-1.0.2t \
  --with-mhash=shared,/usr \
  --with-mcrypt=shared,/usr \
  --enable-sockets \
  --enable-pcntl \
  --enable-sigchild \
  --with-gd=shared \
  --with-jpeg-dir=/usr \
  --with-png-dir=/usr \
  --with-zlib-dir=/usr \
  --with-ttf \
  --with-freetype-dir=/usr \
  --enable-gd-native-ttf \
  --enable-gd-jis-conv \
  \
  --with-config-file-path=/etc/ --with-config-file-scan-dir=/etc/php.d \
  \
  --with-libdir=/lib/x86_64-linux-gnu
#
RUN make -s
RUN make install

#---------
# local-pear
#---------
RUN /usr/local/php/bin/pear install DB-1.7.14 \
 && /usr/local/php/bin/pear install Var_Dump

RUN echo "LoadModule php5_module /usr/lib/apache2/modules/libphp5.so" > /etc/apache2/mods-available/php52.load \
 && fpm -s dir \
  -v 5.2.17 \
  -t deb \
  -n local-php \
  -p local-php-5.2.17_focal-gcc9_amd64.deb \
  -C / \
  --prefix / \
  -a x86_64 \
  /usr/local/php /usr/local/pear /usr/lib/apache2/modules/libphp5.so /etc/apache2/mods-available/php52.load
