FROM centos:8

ENV BUILDROOT="/root/rpmbuild"

# CXXFLAGS
ENV CXXFLAGS="-std=gnu++98"
# ENV CXXFLAGS="-std=gnu++03"
# ENV CXXFLAGS="-std=c++98"

# libmcryptがepelで配布
RUN yum install -y -q epel-release && yum clean all

# 以下パッケージはCentOS8では見当たらなかった
#RUN yum install -y aspell-devel \
#  db4-devel \
#  enchant-devel \
#  libedit-devel \
#  libtidy-devel \
#  recode-devel \
#  t1lib \
#  t1lib-devel

RUN yum install -y \
  bzip2-devel \
  curl-devel \
  cyrus-sasl-devel \
  freetype-devel \
  gcc \
  gcc-c++ \
  glibc-devel \
  gmp-devel \
  httpd-devel \
  krb5-devel \
  libXpm-devel \
  libc-client-devel \
  libicu-devel \
  libjpeg-devel \
  libmcrypt-devel \
  libmhash-devel \
  libpng-devel \
  libtool \
  libtool-ltdl-devel \
  libxml2-devel \
  libxslt-devel \
  make \
  mysql-devel \
  ncurses-devel \
  net-snmp-devel \
  openldap-devel \
  openssl-devel \
  pam-devel \
  patch \
  pcre-devel \
  postgresql-devel \
  readline-devel \
  rpm-build \
  smtpdaemon \
  sqlite-devel \
  unixODBC-devel \
  wget \
  which \
  zlib-devel \
  && yum clean all

# fpm
RUN yum -y install ruby ruby-devel ruby-libs rubygems rpm-build \
 && gem install fpm --no-rdoc --no-ri

#---------
# mysql
#---------
WORKDIR /usr/local/src/
# 以下パッケージはCentOS8では見当たらなかった
#RUN yum install -y -q ORBit2-devel && yum clean all
COPY files/ .
RUN tar xzf mysql-4.0.30.tar.gz
WORKDIR /usr/local/src/mysql-4.0.30
# eucjpとsjisを有効化
RUN ./configure --prefix=/opt/mysql --with-charset=ujis --with-extra-charsets=sjis --quiet

RUN make -s 1>/dev/null \
 && make install \
 && fpm -s dir \
  -v 4.0.30 \
  -t rpm \
  -n opt-mysql \
  -p opt-mysql-4.0.30.el8.x86_64.rpm \
  -C /opt/mysql \
  --prefix /opt/mysql \
  -a x86_64 \
  .

#---------------
# php
#---------------
WORKDIR /usr/local/src/

#-----
# re2c
#-----
# phpの./configureでre2cのPATH指定方法がわからなかったため--prefixは指定していません
RUN tar xzf re2c-0.16.tar.gz \
 && cd re2c-0.16 \
 && ./configure \
 && make -s \
 && make install

#-----
# lemon
#-----
RUN gcc -o /usr/local/bin/lemon lemon.c

#-----
# flex
#-----
RUN yum install -y -q byacc && yum clean all \
 && tar xzf flex-2.5.4a.tar.gz \
 && cd flex-2.5.4 \
 && ./configure --prefix=/opt/flex \
 && make -s \
 && make install \
 && fpm -s dir \
  -v 2.5.4a \
  -t rpm \
  -n opt-flex \
  -p opt-flex-2.5.4a.el8.x86_64.rpm \
  -C /opt/flex \
  --prefix /opt/flex \
  -a x86_64 \
  . \
 && rpm -ivh opt-flex-2.5.4a.el8.x86_64.rpm

#------
# bison
#------
RUN tar jxf bison-2.4.1.tar.bz2 \
 && cd bison-2.4.1 \
 && ./configure \
 && make -s \
 && make install \
 && make install DESTDIR=/opt/bison \
 && fpm -s dir \
  -v 2.4.1 \
  -t rpm \
  -n opt-bison \
  -p opt-bison-2.4.1.el8.x86_64.rpm \
  -C /opt/bison \
  --prefix /opt/bison \
  -a x86_64 \
  .

#---------------
# openssl 1.0.2
#---------------
COPY files/openssl/openssl-1.0.2t.tar.gz openssl-1.0.2t.tar.gz
RUN tar xzf openssl-1.0.2t.tar.gz
WORKDIR /usr/local/src/openssl-1.0.2t
RUN ./config --prefix=/opt/openssl-1.0.2t shared
RUN make -s
RUN make install
RUN ln -s /opt/openssl-1.0.2t/lib /opt/openssl-1.0.2t/lib64
RUN fpm -s dir \
  -v 1.0.2t \
  -t rpm \
  -n opt-openssl \
  -p opt-openssl-1.0.2t.el8.x86_64.rpm \
  -C /opt/openssl-1.0.2t \
  --prefix /opt/openssl-1.0.2t \
  -a x86_64 \
  .

# php
WORKDIR /usr/local/src/
RUN tar jxf php-5.2.17.tar.bz2

# configureを通すため。
RUN ln -s /opt/mysql/lib/mysql/libmysqlclient.so /opt/mysql/lib/mysql/libmysqlclient_r.so \
 && ln -s /opt/mysql/lib/mysql/libmysqlclient.a /opt/mysql/lib/mysql/libmysqlclient_r.a \
 && ln -s /opt/mysql/lib /opt/mysql/lib64

# patch
WORKDIR /usr/local/src/php-5.2.17
RUN patch -p0 -b < ../php-patch/php-5.2.17.patch \
 && patch -p0 -b < ../php-patch/gmp.patch \
 && patch -p0 -b < ../php-patch/php_functions.patch
RUN ./configure --quiet \
  --prefix=/usr/local/php \
  --with-apxs2=/usr/bin/apxs \
  --with-pear=/usr/local/pear \
  --disable-cgi \
  --enable-zend-multibyte \
  --enable-mbstring \
  \
  --with-mysql=shared,/opt/mysql \
  --with-pdo-mysql=shared,/opt/mysql \
  \
  --with-openssl=/opt/openssl-1.0.2t \
  --with-mhash=shared,/usr \
  --with-mcrypt=shared,/usr \
  --enable-sockets \
  --enable-pcntl \
  --enable-sigchild \
  --with-gd=shared \
  --with-jpeg-dir=/usr \
  --with-png-dir=/usr \
  --with-zlib \
  --with-zlib-dir=/usr \
  --with-ttf \
  --with-freetype-dir=/usr \
  --enable-gd-native-ttf \
  --enable-gd-jis-conv \
  \
  --with-config-file-path=/etc/ --with-config-file-scan-dir=/etc/php.d \
  \
  --with-libdir=lib64 \
  1>/dev/null

RUN make -s 1>/dev/null
RUN make test 1>/dev/null
# /etc/httpd/conf/httpd.confがhttpdパッケージとconfrictするため除外
RUN make install

#---------
# local-pear
#---------
RUN /usr/local/php/bin/pear install DB-1.7.14 \
 && /usr/local/php/bin/pear install Var_Dump

RUN echo "LoadModule php5_module modules/libphp5.so" > /etc/httpd/conf.modules.d/10-php52.conf \
 && fpm -s dir \
  -v 5.2.17 \
  -t rpm \
  -n local-php \
  -p local-php-5.2.17.el8.x86_64.rpm \
  -C / \
  --prefix / \
  -a x86_64 \
  /usr/local/php /usr/local/pear /usr/lib64/httpd/modules/libphp5.so /etc/httpd/conf.modules.d/10-php52.conf


#--------------
# perl-DBD-mysql
#--------------
RUN yum install -y perl-DBI
# perl-Devel-CheckLib
WORKDIR /usr/local/src
COPY files.centos8/Devel-CheckLib-1.14.tar.gz /usr/local/src
RUN tar xzf Devel-CheckLib-1.14.tar.gz
WORKDIR /usr/local/src/Devel-CheckLib-1.14
RUN perl Makefile.PL
RUN make
RUN make install DESTDIR=/opt/cpan
RUN fpm -s dir \
  -v 1.0 \
  -t rpm \
  -n local-Devel-CheckLib \
  -p local-Devel-CheckLib-1.14.el8.x86_64.rpm \
  -C /opt/cpan \
  --prefix / \
  -a x86_64 \
  ./usr/local/share/perl5/Devel/CheckLib.pm ./usr/local/share/man/man3/Devel::CheckLib.3pm
RUN rpm -ivh local-Devel-CheckLib-1.14.el8.x86_64.rpm
# perl-DBD-mysql
# (gcc 4.4.7ではビルドできないため注意)
WORKDIR /usr/local/src
#COPY files.centos8/DBD-mysql-4.050.tar.gz /usr/local/src
#RUN tar xzf DBD-mysql-4.050.tar.gz
#WORKDIR /usr/local/src/DBD-mysql-4.050
COPY files.centos8/DBD-mysql-4.050.tar.gz /usr/local/src
RUN tar xzf DBD-mysql-4.050.tar.gz
WORKDIR /usr/local/src/DBD-mysql-4.050

#ENV CXXFLAGS="-std=gnu++98"
#ENV CXXFLAGS=""
#ENV CXXFLAGS="-std=c++98"
#ENV CXXFLAGS="-std=gnu++03"
#RUN echo $CXXFLAGS

RUN perl Makefile.PL
#RUN perl Makefile.PL \
# --mysql_config=/opt/mysql/bin/mysql_config
#--libs="-L/opt/mysql/lib/mysql" --nossl
# --libs="-L/opt/mysql/lib/mysql -lmysqlclient -lcrypt -lnsl -lm"
RUN make
RUN make install DESTDIR=/opt/cpan
RUN fpm -s dir \
  -v 4.050 \
  -t rpm \
  -n local-perl-DBD-mysql \
  -p local-perl-DBD-mysql-4.050.el8.x86_64.rpm \
  -C /opt/cpan/usr/local \
  --prefix /usr/local \
  -a x86_64 \
   ./lib64/perl5/auto/DBD/mysql/mysql.so \
   ./lib64/perl5/DBD/mysql.pm \
   ./lib64/perl5/DBD/mysql/GetInfo.pm \
   ./lib64/perl5/DBD/mysql/INSTALL.pod \
   ./lib64/perl5/Bundle/DBD/mysql.pm \
   ./share/man/man3/Bundle::DBD::mysql.3pm \
   ./share/man/man3/DBD::mysql::INSTALL.3pm \
   ./share/man/man3/DBD::mysql.3pm

#-------------
# Ruby1.8.7用
#-------------
WORKDIR $BUILDROOT/SOURCES/
COPY files.centos8/compat-gcc-44-4.4.7-8.el7.x86_64.rpm compat-gcc-44-4.4.7-8.el7.x86_64.rpm
COPY files.centos8/compat-gcc-44-c++-4.4.7-8.el7.x86_64.rpm compat-gcc-44-c++-4.4.7-8.el7.x86_64.rpm
COPY files.centos8/libstdc++-4.8.5-39.el7.x86_64.rpm libstdc++-4.8.5-39.el7.x86_64.rpm
RUN rpm -ivh --force compat-gcc-44-4.4.7-8.el7.x86_64.rpm compat-gcc-44-c++-4.4.7-8.el7.x86_64.rpm libstdc++-4.8.5-39.el7.x86_64.rpm

RUN yum remove -y gcc gcc-c++ \
 && update-alternatives \
 --install /usr/bin/gcc gcc /usr/bin/gcc44 20 \
 --slave   /usr/bin/g++ g++ /usr/bin/g++44
ENV CC=/usr/bin/gcc44
ENV CXX=/usr/bin/g++44
ENV CXXFLAGS=

#---------------
# opt-ruby-1.8.7
#---------------
WORKDIR $BUILDROOT/SOURCES/
# http://ftp.ruby-lang.org/pub/ruby/1.8/ruby-1.8.7-p374.tar.bz2
COPY files.centos7/ruby-1.8.7-p374.tar.bz2 .
RUN tar xf ruby-1.8.7-p374.tar.bz2
WORKDIR $BUILDROOT/SOURCES/ruby-1.8.7-p374
# https://www.ruby-forum.com/topic/142608
RUN yum install -y -q tk-devel
#RUN yum install -y -q tclx
COPY files.centos7/ruby-1.8.7-p374-openssl.patch .
# openssl patch : https://gist.github.com/alanthing/1a151c9d8d0b81f039d3
RUN patch -p1 < ruby-1.8.7-p374-openssl.patch
RUN ./configure --prefix=/opt/ruby --enable-pthread --with-opt-dir=/opt/openssl-1.0.2t
RUN make -s
RUN make test
RUN make install
RUN fpm -s dir \
  -v 1.8.7_p374 \
  -t rpm \
  -n opt-ruby \
  -p opt-ruby-1.8.7-p374.el8.x86_64.rpm \
  -C /opt/ruby \
  --prefix /opt/ruby \
  -a x86_64 \
  .

WORKDIR /usr/local/src/ruby
# mysql-ruby
RUN tar xzf mysql-ruby-2.8.2.tar.gz \
 && cd mysql-ruby-2.8.2 \
 && /opt/ruby/bin/ruby extconf.rb --with-mysql-dir=/opt/mysql \
 && make -s \
 && make install
# rpmbuild
WORKDIR /usr/local/src/ruby
COPY files.centos7/opt-mysql-ruby.spec $BUILDROOT/SPECS/
RUN tar czf $BUILDROOT/SOURCES/opt-mysql-ruby-2.8.2.tar.gz /opt/ruby/lib/ruby/site_ruby/1.8/x86_64-linux/mysql.so \
 && rpmbuild -ba $BUILDROOT/SPECS/opt-mysql-ruby.spec

# ruby-dbi 0.1.1
WORKDIR /usr/local/src/ruby
RUN tar xzf rel-0-1-1.tar.gz \
 && cd ruby-dbi-rel-0-1-1 \
 && /opt/ruby/bin/ruby setup.rb config --with=dbi,dbd_mysql \
 && /opt/ruby/bin/ruby setup.rb setup \
 && /opt/ruby/bin/ruby setup.rb install
# rpmbuild
WORKDIR /usr/local/src/ruby
COPY files.centos7/opt-ruby-dbi-0.1.1.spec $BUILDROOT/SPECS/
RUN tar czf $BUILDROOT/SOURCES/opt-ruby-dbi-0.1.1.tar.gz /opt/ruby/lib/ruby/site_ruby/1.8 /opt/ruby/bin/sqlsh.rb \
 && rpmbuild -ba $BUILDROOT/SPECS/opt-ruby-dbi-0.1.1.spec

#-----------------------
# perl-IO-BufferedSelect
#-----------------------
WORKDIR /usr/local/src
RUN yum install -y perl-ExtUtils-MakeMaker
COPY files.centos7/IO-BufferedSelect-1.0.tar.gz /usr/local/src
RUN tar xzf IO-BufferedSelect-1.0.tar.gz
WORKDIR /usr/local/src/IO-BufferedSelect
RUN perl Makefile.PL
RUN make
RUN make install DESTDIR=/opt/cpan
RUN fpm -s dir \
  -v 1.0 \
  -t rpm \
  -n local-perl-IO-BufferedSelect \
  -p local-perl-IO-BufferedSelect-1.0.el8.x86_64.rpm \
  -C /opt/cpan \
  --prefix / \
  -a x86_64 \
  ./usr/local/share/perl5/IO/BufferedSelect.pm ./usr/local/share/man/man3/IO::BufferedSelect.3pm
RUN rpm -ivh local-perl-IO-BufferedSelect-1.0.el8.x86_64.rpm

#-------
# tenshi
#-------
WORKDIR /usr/local/src
COPY files.centos7/tenshi-0.17.tar.gz /usr/local/src
RUN tar xzf tenshi-0.17.tar.gz
WORKDIR /usr/local/src/tenshi-0.17
RUN sed -i -e 's/mail.log/maillog/' tenshi.conf
RUN make install DESTDIR=/opt/tenshi
RUN fpm -s dir \
  -v 0.17 \
  -t rpm \
  -d "local-perl-IO-BufferedSelect" \
  -n opt-tenshi \
  -p opt-tenshi-0.17.el8.x86_64.rpm \
  -C /opt/tenshi \
  --prefix /opt/tenshi \
  -a x86_64 \
  .
