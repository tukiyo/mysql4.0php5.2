FROM tukiyo3/centos7-build as el7mysql40

#----------
# mysql-4.0
#----------
WORKDIR /usr/local/src/
COPY files/ .
RUN tar xzf mysql-4.0.30.tar.gz
WORKDIR /usr/local/src/mysql-4.0.30
# eucjpとsjisを有効化
RUN ./configure --prefix=/opt/mysql40 --with-charset=ujis --with-extra-charsets=sjis --quiet
RUN echo "/opt/mysql40/lib/mysql/" > /etc/ld.so.conf.d/opt-mysql40.conf
COPY etc/my.cnf.example-40 /etc/my.cnf.example-40
RUN make -s 1>/dev/null
#RUN make test
RUN make install
# CentOS7でdeb作成
RUN fpm -s dir \
  -v 4.0.30~$(date "+%Y%m%d")-el7 \
  -t deb \
  -d "libclass-dbi-mysql-perl" \
  -n opt-mysql40 \
  -p opt-mysql40-4.0.30_el7_amd64.deb \
  -C / \
  --prefix / \
  -a x86_64 \
  /opt/mysql40/ /etc/ld.so.conf.d/opt-mysql40.conf /etc/my.cnf.example-40

# -------------------------------------------------------------------------
FROM tukiyo3/ubuntu-build:20.04 as ubuntu2004

ENV CXXFLAGS="-std=gnu++98"

#----------
# mysql-4.0
#----------
WORKDIR /usr/local/src/
COPY files/mysql-4.0.30.tar.gz .
RUN tar xzf mysql-4.0.30.tar.gz
WORKDIR /usr/local/src/mysql-4.0.30
# eucjpとsjisを有効化
RUN ./configure --prefix=/opt/mysql40 --with-charset=ujis --with-extra-charsets=sjis --quiet
RUN echo "/opt/mysql40/lib/mysql/" > /etc/ld.so.conf.d/opt-mysql40.conf
COPY etc/my.cnf.example-40 /etc/my.cnf.example-40
RUN make -s 1>/dev/null
RUN make install

#------------
# mysql-5.0
#------------
WORKDIR /usr/local/src/
COPY files.centos8/mysql-5.0.86.tar.gz mysql-5.0.86.tar.gz
RUN tar xzf mysql-5.0.86.tar.gz
WORKDIR /usr/local/src/mysql-5.0.86
# eucjpとsjisを有効化
RUN ./configure --prefix=/opt/mysql50 --with-charset=ujis --with-extra-charsets=sjis --quiet
RUN echo "/opt/mysql50/lib/mysql/" > /etc/ld.so.conf.d/opt-mysql50.conf
COPY etc/my.cnf.example-40 /etc/my.cnf.example-50
RUN make -s 1>/dev/null
RUN make install
# mysql50-lib
RUN mkdir -p /opt/mysql50-lib/ \
  && cp -a /opt/mysql50/lib /opt/mysql50-lib/ \
  && echo "/opt/mysql50-lib/lib/mysql/" > /etc/ld.so.conf.d/opt-mysql50-lib.conf

# link
RUN ln -s /opt/mysql40 /opt/mysql

# perl-DBD-mysql-4.050
WORKDIR /usr/local/src
COPY files.centos8/DBD-mysql-4.050.tar.gz .
RUN tar xzf DBD-mysql-4.050.tar.gz
WORKDIR /usr/local/src/DBD-mysql-4.050
RUN perl Makefile.PL \
 --mysql_config=/opt/mysql50/bin/mysql_config
RUN make
RUN make install DESTDIR=/opt/perl-DBD-mysql


#---------------
# openssl 1.0.2u
#---------------
WORKDIR /usr/local/src/
COPY files/openssl/openssl-1.0.2u.tar.gz openssl-1.0.2u.tar.gz
RUN tar xzf openssl-1.0.2u.tar.gz
WORKDIR /usr/local/src/openssl-1.0.2u
RUN ./config shared enable-ssl2 enable-ssl3 enable-md2 enable-weak-ssl-ciphers --prefix=/opt/openssl-1.0.2u
RUN make -s
RUN make install


# 2.php 5.2.17 -----------------------------------------------------------
WORKDIR /usr/local/src/
COPY files/php-5.2.17.tar.bz2 .
RUN tar jxf php-5.2.17.tar.bz2
WORKDIR /usr/local/src/php-5.2.17
# configureを通すため。
RUN ln -s /opt/mysql/lib/mysql/libmysqlclient.so /opt/mysql/lib/mysql/libmysqlclient_r.so \
 && ln -s /opt/mysql/lib/mysql/libmysqlclient.a /opt/mysql/lib/mysql/libmysqlclient_r.a \
 && ln -s /opt/mysql/lib/mysql/ /opt/mysql/lib/x86_64-linux-gnu \
 && (cd /opt/openssl-1.0.2u && cp -a lib x86_64-linux-gnu && mv x86_64-linux-gnu lib)

# CentOS7用と同じパッチ
COPY files/php-patch/gmp.patch ..
COPY files/php-patch/php-5.2.17.patch ..
COPY files/php-patch/php_functions.patch ..
RUN patch -p0 -b < ../php-5.2.17.patch \
 && patch -p0 -b < ../gmp.patch \
 && patch -p0 -b < ../php_functions.patch
RUN ./configure \
  --prefix=/usr/local/php \
  --with-apxs2=/usr/bin/apxs \
  --with-pear=/usr/local/pear \
  --disable-cgi \
  --enable-zend-multibyte \
  --enable-mbstring \
  \
  --with-mysql=shared,/opt/mysql \
  --with-pdo-mysql=shared,/opt/mysql \
  \
  --with-openssl=/opt/openssl-1.0.2u \
  --with-mhash=shared,/usr \
  --with-mcrypt=shared,/usr \
  --enable-sockets \
  --enable-pcntl \
  --enable-sigchild \
  --with-gd=shared \
  --with-jpeg-dir=/usr \
  --with-png-dir=/usr \
  --with-zlib \
  --with-zlib-dir=/usr \
  --with-ttf \
  --with-freetype-dir=/usr \
  --enable-gd-native-ttf \
  --enable-gd-jis-conv \
  \
  --with-config-file-path=/etc/ --with-config-file-scan-dir=/etc/php.d \
  \
  --with-libdir=/lib/x86_64-linux-gnu \
  1>/dev/null

RUN make -s 1>/dev/null
RUN make test 1>/dev/null
RUN make install

#---------
# local-pear
#---------
COPY etc/php.ini /etc/php.ini
COPY etc/php.d/ /etc/php.d/

# 互換性のため
RUN /usr/local/php/bin/pear install DB-1.7.14
# メールデコードに便利
RUN /usr/local/php/bin/pear install Mail
# phpのソースを整形
RUN /usr/local/php/bin/pear install PHP_Beautifier-0.1.15
# HTML Formをさくっとつくれる
RUN /usr/local/php/bin/pear install HTML_QuickForm2
# DB-1.7.14 の後継
RUN /usr/local/php/bin/pear install MDB2
RUN /usr/local/php/bin/pear install MDB2_Driver_sqlite
RUN /usr/local/php/bin/pear install MDB2_Driver_mysql

# xdebug
WORKDIR /usr/local/src/
COPY files/xdebug-2.2.7.tgz /usr/local/src/
RUN tar xzf xdebug-2.2.7.tgz
WORKDIR /usr/local/src/xdebug-2.2.7
RUN /usr/local/php/bin/phpize \
 && ./configure --enable-xdebug --with-php-config=/usr/local/php/bin/php-config \
 && make -s \
 && cp /usr/local/src/xdebug-2.2.7/modules/xdebug.so /usr/local/php/lib/php/extensions/
# add MimeType
COPY etc/httpd/conf.d/php.conf /etc/apache2/conf-available/php.conf
RUN (cd /etc/apache2/conf-enabled && ln -s ../conf-available/php.conf php.conf)

#---------------
# opt-ruby-1.8.7
#---------------
# gcc 4.4 ---------------------------------------------------------
ENV CC=/usr/bin/gcc-4.4
ENV CXX=/usr/bin/g++-4.4
ENV CXXFLAGS=""
#
WORKDIR /usr/local/src
# http://ftp.ruby-lang.org/pub/ruby/1.8/ruby-1.8.7-p374.tar.bz2
COPY files.centos7/ruby-1.8.7-p374.tar.bz2 .
RUN tar xf ruby-1.8.7-p374.tar.bz2
WORKDIR /usr/local/src/ruby-1.8.7-p374
# https://www.ruby-forum.com/topic/142608
COPY files.centos7/ruby-1.8.7-p374-openssl.patch .
# openssl patch : https://gist.github.com/alanthing/1a151c9d8d0b81f039d3
RUN patch -p1 < ruby-1.8.7-p374-openssl.patch
RUN ./configure --prefix=/opt/ruby187 --enable-pthread --with-opt-dir=/opt/openssl-1.0.2u
RUN make -s
RUN make test
RUN make install

#----------
# packaging
#----------
WORKDIR /build/


# [deb] --------------------------------------------------
# mysql40
COPY --from=el7mysql40 /usr/local/src/mysql-4.0.30/opt-mysql40-4.0.30_el7_amd64.deb .

# mysql-5.0
RUN fpm -s dir \
  -v 5.0.86~$(date "+%Y%m%d") \
  -t deb \
  -n opt-mysql50-lib \
  -p opt-mysql50-lib-5.0.86_focal-gcc9_amd64.deb \
  -C / \
  --prefix / \
  -a x86_64 \
  /opt/mysql50-lib/lib /etc/ld.so.conf.d/opt-mysql50-lib.conf

# local-perl-DBD-mysql
RUN fpm -s dir \
  -v 4.050~$(date "+%Y%m%d") \
  -d "libdbd-mysql-perl" \
  -t deb \
  -n local-perl-DBD-mysql \
  -p local-perl-DBD-mysql-4.050_focal-gcc9_amd64.deb \
  -C /opt/perl-DBD-mysql \
  --prefix / \
  -a x86_64 \
  .
# openssl-1.0.2u
RUN fpm -s dir \
  -v 1.0.2u~$(date "+%Y%m%d") \
  -t deb \
  -n opt-openssl \
  -p opt-openssl-1.0.2u_focal-gcc9_amd64.deb \
  -C /opt/openssl-1.0.2u \
  --prefix /opt/openssl-1.0.2u \
  -a x86_64 \
  .

# php
RUN mkdir -p /etc/apache2/mods-available/ /etc/apache2/mods-enabled/ \
 && echo "LoadModule php5_module /usr/lib/apache2/modules/libphp5.so" > /etc/apache2/mods-available/php52.conf \
 && (cd /etc/apache2/mods-enabled/ && ln -s ../mods-available/php52.conf php52.conf) \
 && echo "install -o www-data -g www-data -m 0770 -d /var/lib/php/session/" > /usr/local/php/bin/gen_session_dir.sh \
 && chmod +x /usr/local/php/bin/gen_session_dir.sh

## libjpeg8 は debian10にはない。ubuntu20.04にはある。
RUN fpm -s dir \
  -v 5.2.17~$(date "+%Y%m%d") \
  -d "opt-openssl" -d "opt-mysql40" -d "libmcrypt4" -d "libmhash2" -d "libpng16-16" -d "libjpeg8" -d "libfreetype6" -d "libncurses5" \
  --post-install "/usr/local/php/bin/gen_session_dir.sh" \
  -t deb \
  -n local-php \
  -p local-php-5.2.17_focal-gcc9_amd64.deb \
  -C / \
  --prefix / \
  -a x86_64 \
  /usr/local/php /usr/local/pear /usr/lib/apache2/modules/libphp5.so /etc/apache2/conf-available/php.conf /etc/apache2/conf-enabled/php.conf /etc/apache2/mods-available/php52.conf /etc/apache2/mods-enabled/php52.conf /etc/php.ini /etc/php.d/

# ruby 1.8.7
RUN fpm -s dir \
  -v 1.8.7p374~$(date "+%Y%m%d") \
  -t deb \
  -n opt-ruby187 \
  -p opt-ruby187-1.8.7_focal-gcc44_amd64.deb \
  -C /opt/ruby187 \
  --prefix /opt/ruby187 \
  -a x86_64 \
  .
